= RightScale Database Manager

== DESCRIPTION:

This cookbook provides a set of database recipes used by the RightScale
Database Manager ServerTemplates.

This cookbook does not contain a specific database implementation, rather
it provides an interface for general database actions and parameters.

== REQUIREMENTS:

* Must be used with a 'db' provider in the cookbook path.
* Depends on a <tt>block_device</tt> resource for backup and restore recipes.
* Requires a virtual machine launched from a RightScale-managed RightImage.

== COOKBOOKS DEPENDENCIES:

Please see <tt>metadata.rb</tt> file for the latest dependencies.

== KNOWN LIMITATIONS:

* Only one db provider should be present in your cookbook path.

== SETUP:

* Place <tt>db::default</tt> recipe into your runlist to set up the db resource. When
  using a RightScale ServerTemplate, this will also automatically add the common
  database attributes to your ServerTemplate's inputs.

* The default recipe for the cookbook that contains the db provider must also be
  added to your runlist. For example:

    db_mysql::default

  This will load your provider and pull in any database specific attributes as
  inputs.

== USAGE:

=== Initialize a master database:

1. Once your server is operational, run the:

    "db::setup_block_device"

   recipe, which initializes your database onto a block device
   that supports backup and restore operations.
2. Initialize your database from previous dump file or other source.
3. Register your database with a DNS provider that supports dynamic DNS using:

    "sys_dns::do_set_private"

   to allow your application servers to start making connections.
4. Backup your database using:

    "db:do_backup"

   so that you can restore the master database in the event 
   of a failure or planned termination.

=== Restore a master database:

1. Once your server is operational, run the:

    "db::do_restore"

   recipe, which restores your database from a backup previously saved to
   persistent cloud storage.
3. Register your database with a DNS provider that supports dynamic DNS using:

    "sys_dns::do_set_private"

   to allow your application servers to start making connections.

=== Setup database client:

1. Put "db::install_client" into database client ServerTemplate runlist.
   Use db/provider_type input to select from existing clients or override this
   input to add custom type of database client
   db/provider_type Input selects your database provider cookbook
   (e.g. db_mysql, db_postgres, db_oracle, etc.) and what database version the client
   will connect to. (e.g. 5.1, 5.5, 9.1). This affects what connector package to install.
   Syntax for this input is <cookbook>_<version> (i.e. db_mydatabase_1.0)

2. Fill <tt>db/application/password</tt> , <tt>db/application/user</tt> and
<tt>db/dns/master/fqdn</tt> inputs which are necessary to connect client to Database Manager.

== DETAILS:

=== General

The 'db' interface is defined by a Lightweight Resource, which can be found in
the 'resources/default.rb' file.

This cookbook is intended to be used in conjunction with cookbooks that contain
Lightweight Providers which implement the 'db' interface. See RightScale's
'db_mysql' cookbook for an example.

For more information about Lightweight Resources and Providers (LWRPs), please see: {Lightweight Resources and Providers}[http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/08-Chef_Development/Lightweight_Resources_and_Providers_(LWRP)]

=== Backup/Restore

This cookbook depends on the block_device LWRP for backup and restore actions.
See <tt>db::do_backup</tt> and <tt>db::do_restore</tt> recipes for examples. The
'block_device' cookbook provides primary and secondary persistence solutions for
multiple clouds.

However, using LWRPs one can provide their own block device implementation
instead.

Please see the 'block_device' cookbook for the list of available actions,
attributes and usage.

=== Providers:

When writing your own database Lightweight Provider:

* The database provider to use is defined by the node[:db][:provider] attribute. You
  will need to override this attribute by adding the following code in the 
  attributes file of your provider cookbook.

    set[:db][:provider] = "db_myprovider"


* Any database-specific attributes that you wish to make into user-configurable
  inputs should be added to the cookbook metadata with the default recipe included in
  the attribute's 'recipes' array. For more about Chef metadata, please see: {Chef Metadata}[http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/04-RightScale_Support_of_Chef/Chef_Metadata]

* Your provider cookbook metadata should depend on this cookbook by adding a
  'depends' line to its metadata. For example:

    depends "db"

= LICENSE:

Copyright RightScale, Inc. All rights reserved.  All access and use subject to
the RightScale Terms of Service available at http://www.rightscale.com/terms.php
and, if applicable, other agreements such as a RightScale Master Subscription
Agreement.
